<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)

</head>
<body>
    @{
        var sweetAlertMessage = TempData["sweetAlertMessage"] as string;
        var sweetAlertIcon = TempData["sweetAlertIcon"] as string;
    }

    <div >
        @RenderBody()
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function sweetAlert(iconMessage,aleartMessage){
            const Toast = Swal.mixin({
                toast: true,
                position: "top",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
                }
            });
            Toast.fire({
                icon: iconMessage,
                title: aleartMessage
            });
        }
    </script>

    <script>
        @if (!string.IsNullOrEmpty(sweetAlertMessage) && !string.IsNullOrEmpty(sweetAlertIcon))
        {
            <text>
                sweetAlert("@sweetAlertIcon", "@sweetAlertMessage");
            </text>
        }
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
